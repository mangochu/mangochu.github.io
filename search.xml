<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>開發工具 - VSCode基礎設置</title>
    <url>/programming/20210806/3967904930/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Visual Studio Code（以下簡稱VSCode）是目前大家最推薦的原始碼編輯器，VSCode的好處多多，支援很多程式語言還有可以在內建的擴充程式商店安裝擴充，也有偵錯和代碼自動補全的功能等等，最重要的是<strong>免費</strong>，所以很多人推薦新手直接學習VSCode。筆者從自學一開始就是接觸VSCode。其他還有很多編輯器（Sublime、ATOM、Dreamweaver、……）筆者自己也沒用過（汗）。</p>
<p>以下會說明VSCode內的一些功能設定方法，擴充推薦未來會再出一篇文章說明。</p>
<h3 id="TAB縮排"><a href="#TAB縮排" class="headerlink" title="TAB縮排"></a>TAB縮排</h3><p>VSCode預設的Tab為4個半形空白，但是根據ESLint的標準，在寫JS的時候還是改成2個半形空白會比較好。<br>（關於ESLint的說明，很推薦大家去看Eddy大的Gitbook中<a href="https://eyesofkids.gitbooks.io/react-basic-zh-tw/content/day03_eslint/">工具篇-ESLint</a>）</p>
<p>首先說明VSCode的自動縮排快捷鍵是：<code>Shift + Alt + F</code></p>
<h4 id="選擇縮排"><a href="#選擇縮排" class="headerlink" title="選擇縮排"></a>選擇縮排</h4><p> 看向視窗的下方有一個空格：4就代表每一行Tab的縮排是4個空格<br> <img data-src="2.png" alt="空格：4"><br> 若要將其設為2，則是<strong>點選空格後，選擇「使用空格鍵進行縮排」</strong>，改為2即可。<br> 修改後再使用VSCode自動縮排（Shift+Alt+F）就會變更了<br> <img data-src="2-1.gif" alt="修改空格"></p>
<h4 id="選單設定"><a href="#選單設定" class="headerlink" title="選單設定"></a>選單設定</h4><p> 另外如果未來不想要每次都要修改縮排設定的話，就到選單設定裡做一些變更：</p>
<ol>
<li><strong>檔案&gt;喜好設定&gt;設定</strong></li>
<li>搜尋Tab size並將其值改為2</li>
</ol>
<p><img data-src="3.png" alt="檔案&gt;喜好設定&gt;設定"></p>
<p><img data-src="4.png" alt="Tab size to 2"><br> 並且把Detect Indentation 取消勾選<br><img data-src="1.png" alt="Detect Indentation"></p>
<h3 id="自訂程式碼片段（Snippet）"><a href="#自訂程式碼片段（Snippet）" class="headerlink" title="自訂程式碼片段（Snippet）"></a>自訂程式碼片段（Snippet）</h3><p>當我們有重複的程式碼要輸入時，有Snippet可以提升我們Coding的效率。<br>範例如下：<br><img data-src="5.gif" alt="snippet示範"></p>
<p>或者我們可以用一個模板讓我們填入自定義值：<br><img data-src="5-1.gif" alt="snippet示範2"></p>
<p>以上範例都是需要自己建立的，不是開啟就有的功能喔！<br>要建立自己的Snippet首先到<strong>檔案&gt;喜好設定&gt;使用者程式碼片段</strong><br><img data-src="5-2.png" alt="Snippet設定"><br>接著可以根據需要的語言進行設定，可以看到我現有的程式碼片段就有2個（css/ html），也可以選擇其他的語言或者全域程式碼片段去設定。<br><img data-src="5-3.png" alt="Snippet設定2"></p>
<p>Snippet設定會以json檔案編輯，以下為格式說明：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;//Snippet名稱&quot;</span>: &#123;</span><br><span class="line">  <span class="attr">&quot;prefix&quot;</span>: <span class="string">&quot;//想要的縮寫&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;body&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;//Snippet內容&quot;</span></span><br><span class="line">    ],</span><br><span class="line">  <span class="attr">&quot;description&quot;</span>: <span class="string">&quot;//說明描述&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中body裡的設定有幾點說明：</p>
<ul>
<li>用”$”加上數字的組合可以成為特殊字組（例如：<code>$1</code>, <code>$2</code>），特殊字組所在的區域就是每按1次TAB會停在該區域，可以打上任何值再按TAB跳到下個區域，例如：<code>&quot;&lt;img src=\&quot;https://picsum.photos/$1/$2?random=$3\&quot;&gt;&quot;</code></li>
<li>因為是字串（string），前後必須加上雙引號（”），那問題來了裡面如果又有雙引號就會碰上錯誤，這時候要在裡面的雙引號前面加上倒斜線（<code>\&quot;</code>），例如：<code>&quot;&lt;img src=\&quot;https://picsum.photos/300/400?random=1\&quot;&gt;&quot;</code></li>
<li>body的每一個字串陣列都代表程式碼的<strong>一行</strong>，換行要記得在每行字串後用逗號（,）隔開，例如：</li>
</ul>
 <figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;* &#123;&quot;</span>,</span><br><span class="line"><span class="string">&quot;margin: 0;&quot;</span>,</span><br><span class="line"><span class="string">&quot;padding: 0;&quot;</span>,</span><br><span class="line"><span class="string">&quot;list-style: none;&quot;</span>,</span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="快速撰寫輔助工具（Emmet）-使用縮寫換行（wrap-with-abbreviation）"><a href="#快速撰寫輔助工具（Emmet）-使用縮寫換行（wrap-with-abbreviation）" class="headerlink" title="快速撰寫輔助工具（Emmet） - 使用縮寫換行（wrap with abbreviation）"></a>快速撰寫輔助工具（Emmet） - 使用縮寫換行（wrap with abbreviation）</h3><p>高手在使用VSCode的時候其實是可以不使用滑鼠完成大部分的程式碼編寫，而且效率比使用滑鼠還高。<br>這也是多虧了Emmet功能，所以最後要介紹的是Emmet其中一項功能，快速包住程式碼（wrap with abbreviation）<br>首先說明VSCode有內建功能，當你反白一段字串後可以用輸入引號或大中小括號（’’,””,(),[],{}）快速把反白字串包住。<br><img data-src="6.gif" alt="Emmet"><br>而現在要介紹的就是進階版功能，用標籤（Tag)把字串快速包住：<br><img data-src="6-1.gif" alt="縮寫換行示範"></p>
<p>這個其實是使用了工作台的功能Wrap with abbreviation，步驟如下：</p>
<ol>
<li><code>Ctrl + Shift + P</code>可以叫出工作台</li>
<li>輸入wrap with abbreviation按下Enter</li>
<li>輸入你想包入的縮寫，就大功告成啦<br><img data-src="6-2.png" alt="wrap with abbreviation"><br>另外如果要做到像我一樣迅速使用，就是要設定快捷鍵。<br>設定方法就是按下右邊的齒輪，進去後再按編輯鍵設定即可，這邊我是設定<code>Shift + Alt + W</code><br><img data-src="6-3.png" alt="shortcut setting"></li>
</ol>
<p>以上文章是我整理的一些實用功能和設定，其實如果平常有空應該多爬爬這類型的文章，應該可以加快不少寫程式碼的速度。<br>那麼我們下一篇見！</p>
]]></content>
      <categories>
        <category>全端</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>開發工具 - VSCode擴充功能</title>
    <url>/programming/20210808/91963548/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3>]]></content>
      <categories>
        <category>全端</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
</search>
